{"version":3,"sources":["components/Auth/RequireAuth.jsx","components/Auth/AlreadyLoginned.jsx","api/index.js","api/mobile.js","constants/actionTypes.js","components/Login/LoginForm.jsx","actions/auth.js","pages/Login.jsx","components/GlobalHeader.jsx","pages/Home.jsx","pages/PastOrders.jsx","actions/pastOrders.js","pages/Restaurants.jsx","actions/restaurants.js","pages/Account.jsx","reducers/index.js","reducers/auth.js","reducers/restaurants.js","reducers/pastOrders.js","reducers/user.js","index.js"],"names":["RequireAuth","children","authData","useSelector","state","auth","location","useLocation","to","from","loginMessage","AlreadyLoginned","API","axios","create","baseURL","process","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","signIn","formData","post","client","GraphQLClient","getRestaurants","userToken","requestHeaders","query","gql","data","console","log","getPastOrders","getUserInfo","SIGN_IN","SIGN_OUT","GET_USER_RESTAURANTS","GET_PAST_ORDERS","GET_USER_INFO","RegisterForm","useState","firstName","lastName","email","phone","password","form","setForm","dispatch","useDispatch","navigate","useNavigate","handleChange","e","target","name","value","className","src","alt","onFinish","router","api","type","payload","setItem","stringify","scrollToFirstError","Item","rules","message","required","placeholder","onChange","hasFeedback","Password","htmlType","Login","props","Sider","Layout","Header","Content","Footer","error","style","height","backgroundColor","width","breakpoint","collapsedWidth","zeroWidthTriggerStyle","display","LoginForm","menu","mode","marginLeft","onClick","removeItem","cursor","overlay","placement","arrow","icon","UserOutlined","Home","margin","padding","textAlign","minWidth","fontSize","borderRadius","PastOrders","pastOrdersData","setPastOrdersData","pastOrders","useEffect","mobileAPI","length","i","order","restData","key","address","addressLine1","date","orderDate","restaurant","total","push","marginBottom","paddingBottom","fontWeight","color","columns","title","dataIndex","sorter","a","b","sortDirections","dataSource","loading","restaurantData","setRestaurantData","restaurants","typeNameArr","types","status","open","cuisines","filters","text","render","onFilter","record","map","tag","toUpperCase","pagination","Account","userInfo","user","bordered","label","span","mobileNumber","createdAt","emailVerified","smsVerified","addresses","addressLine2","flatNumber","postalCode","id","reducers","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","rootElement","document","getElementById","path","element","Restaurants"],"mappings":"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","file":"static/js/main.00618740.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\n\r\nconst RequireAuth = ({ children }) => {\r\n\r\n    const authData = useSelector((state) => state.auth);\r\n\r\n    const location = useLocation();\r\n\r\n    if (!authData) {\r\n        return <Navigate to=\"/login\" state={{ from: location, loginMessage: 'You have to be logged in!' }} />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\n\r\nexport default RequireAuth;","/* eslint-disable */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\n\r\nconst AlreadyLoginned = ({ children }) => {\r\n\r\n    const authData = useSelector((state) => state.auth);\r\n\r\n    const location = useLocation();\r\n\r\n    if (authData) {\r\n        return <Navigate to=\"/\" state={{ from: location }} />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\n\r\nexport default AlreadyLoginned;","import axios from 'axios';\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\n\r\n\r\nconst API = axios.create({ baseURL: BASE_URL });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    if (localStorage.getItem('usId')) {\r\n        if (req.headers) {\r\n            req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('usId')).token}`;\r\n        }\r\n    }\r\n    return req;\r\n});\r\n\r\nexport const signIn = (formData) => API.post('/user/signin', formData);\r\n\r\n\r\n\r\n","import { GraphQLClient, gql } from 'graphql-request';\r\n\r\n\r\nconst MOBILE_API_URL = process.env.REACT_APP_MOBILE_API_URL;\r\nconst client = new GraphQLClient(MOBILE_API_URL);\r\n\r\nexport const getRestaurants = async (userToken) => {\r\n\r\n  try {\r\n\r\n    const requestHeaders = {\r\n      authorization: ` Bearer ${userToken} `\r\n    }\r\n\r\n    const query = gql`\r\n        {\r\n          restaurants(\r\n            delivery: false\r\n            index: 1\r\n            limit: 100\r\n          ) {\r\n            name\r\n            open\r\n            types {\r\n              name\r\n            }\r\n          \r\n          }\r\n        }\r\n        \r\n          `\r\n    const data = await client.request(query, null, requestHeaders)\r\n\r\n    return data;\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const getPastOrders = async (userToken) => {\r\n\r\n  try {\r\n\r\n    const requestHeaders = {\r\n      authorization: ` Bearer ${userToken} `\r\n    }\r\n\r\n    const query = gql`\r\n      {\r\n        pastOrders(limit: 100, index: 1) {\r\n          address {\r\n            addressLine1\r\n          }\r\n          orderDate\r\n          restaurant {\r\n            name\r\n          }\r\n          total\r\n      \r\n        }\r\n      }\r\n        `\r\n\r\n    const data = await client.request(query, null, requestHeaders)\r\n\r\n    return data;\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n\r\nexport const getUserInfo = async (userToken) => {\r\n\r\n  try {\r\n\r\n\r\n    const requestHeaders = {\r\n      authorization: ` Bearer ${userToken} `\r\n    }\r\n\r\n    const query = gql`\r\n    {\r\n      user {\r\n        addresses {\r\n          addressIconId\r\n          addressLine1\r\n          addressLine2\r\n          adminWard\r\n    \r\n          default\r\n          flatNumber\r\n          fullName\r\n          geoEnabled\r\n          id\r\n          lat\r\n          lon\r\n          postalCode\r\n          slugAdminWard\r\n          tips\r\n          title\r\n        }\r\n        createdAt\r\n        email\r\n        emailVerified\r\n        firstName\r\n        lastName\r\n        mobileNumber\r\n        smsVerified\r\n      }\r\n    }\r\n    \r\n        `\r\n\r\n    const data = await client.request(query, null, requestHeaders)\r\n\r\n\r\n\r\n    return data;\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n\r\n\r\n}","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\n\r\n\r\nexport const GET_USER_RESTAURANTS = 'GET_USER_RESTAURANTS';\r\n\r\nexport const GET_PAST_ORDERS = 'GET_PAST_ORDERS';\r\n\r\nexport const GET_USER_INFO = 'GET_USER_INFO';\r\n\r\n\r\n\r\n\r\n\r\n","/* eslint-disable */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signin } from 'actions/auth';\r\n\r\n\r\nconst RegisterForm = () => {\r\n\r\n    const initialState = { firstName: '', lastName: '', email: '', phone: '', password: '' };\r\n    const [form, setForm] = useState(initialState);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n   \r\n\r\n    const handleSubmit = (e) => {\r\n        dispatch(signin(form, navigate));\r\n    };\r\n\r\n    const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n\r\n\r\n    return (\r\n        <div className='login-form-container'>\r\n            <div className='login-form-logo-container'>\r\n                <img className='login-form-logo' src=\"/simpliicon.png\" alt=\"\" />\r\n            </div>\r\n            <div className='login-form-welcome' >\r\n                Welcome\r\n            </div>\r\n            <div className='login-form-message' >\r\n                Log in and order from best restaurants\r\n            </div>\r\n            <Form\r\n                onFinish={handleSubmit}\r\n                name=\"register\"\r\n                scrollToFirstError\r\n            >\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    \r\n                    rules={[\r\n                        {\r\n                            type: 'email',\r\n                            message: 'This is not a valid email.',\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: 'Email is required.',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input  className='login-form-input' name=\"email\" placeholder='Email' onChange={handleChange} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\" \r\n                    \r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password!',\r\n                        },\r\n                    ]}\r\n                    hasFeedback\r\n                >\r\n                    <Input.Password className='login-form-input' name={\"password\"} placeholder='Password'  onChange={handleChange} />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" className='login-form-button' htmlType=\"submit\">\r\n                        Let's go\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default RegisterForm;","import * as api from '../api/index';\r\nimport * as mobileAPI from '../api/mobile';\r\nimport { GET_USER_INFO } from 'constants/actionTypes';\r\n\r\nexport const signin = (formData, router) => async (dispatch) => {\r\n  try {\r\n\r\n    const { data } = await api.signIn(formData);\r\n\r\n    dispatch({ type: 'SIGN_IN', payload: data });\r\n\r\n    localStorage.setItem('usId', JSON.stringify({ ...data }));\r\n\r\n    router('/');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const signout = (router) => async (dispatch) => {\r\n  try {\r\n\r\n    dispatch({ type: 'SIGN_OUT' });\r\n\r\n    localStorage.removeItem('usId');\r\n\r\n    router('/login');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getUserInfo = (userToken) => async (dispatch) => {\r\n  try {\r\n\r\n    const userInfo  = await mobileAPI.getUserInfo(userToken);\r\n\r\n    dispatch({ type: GET_USER_INFO, payload: userInfo.user });\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n","/* eslint-disable */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Layout, message } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './Login.css'\r\nimport LoginForm from 'components/Login/LoginForm';\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const location = useLocation();\r\n   \r\n\r\n    const { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\n    if(location.state) {\r\n        message.error(location.state.loginMessage);\r\n    }\r\n\r\n    return (\r\n        <Layout style={{ height: '100vh', backgroundColor: 'white' }} >\r\n            <Sider className='login-sider' width={'40%'} breakpoint='xs' collapsedWidth={0} zeroWidthTriggerStyle={{ display: 'none' }}>\r\n                <div className='login-logo'>\r\n                    <img className='login-logo-icon' src=\"./simplilogo.png\" alt=\"\" />\r\n                </div>\r\n\r\n            </Sider>\r\n            <Layout className=\"login-layout\">\r\n                <LoginForm />\r\n            </Layout>\r\n\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default Login;","\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Layout, Menu, Avatar, Dropdown } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport './GlobalHeader.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport { signout } from 'actions/auth';\r\n\r\n\r\n\r\nexport default (props) => {\r\n\r\n\r\n\r\n    const { Header } = Layout;\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const menu = (\r\n        <Menu mode=\"horizontal\" style={{ backgroundColor: \"#eee\", marginLeft: 20 }} >\r\n            <Menu.Item onClick={() => { navigate('/my-account') }}>My account</Menu.Item>\r\n            <Menu.Item onClick={() => { dispatch(signout(navigate)) }}>Log out</Menu.Item>\r\n        </Menu>\r\n\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Header className=\"header\" style={{ backgroundColor: 'white', display: 'flex' }}>\r\n            <div>\r\n                <div onClick={() => { navigate('/') }} style={{cursor:'pointer'}}>\r\n                    <img src=\"/simplilogo.png\" />\r\n                </div>\r\n            </div>\r\n            <div style={{ marginLeft: 'auto' }}>\r\n                <div className=\"header-avatar-container\">\r\n                    <Dropdown overlay={menu} placement=\"topRight\" arrow>\r\n                        <Avatar className='header-avatar-icon' icon={<UserOutlined />} />\r\n                    </Dropdown>\r\n                </div>\r\n            </div>\r\n        </Header>\r\n    )\r\n};","/* eslint-disable */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Breadcrumb, Layout, Menu, Button } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './Login.css'\r\nimport LoginForm from 'components/Login/LoginForm';\r\nimport GlobalHeader from 'components/GlobalHeader';\r\n\r\nconst Home = (props) => {\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const {  Content } = Layout;\r\n\r\n\r\n\r\n    return (\r\n        <Layout className=\"layout\" style={{ height: '100vh' }}>\r\n            <GlobalHeader />\r\n            <Content\r\n                style={{\r\n                    margin: '20px',\r\n                    padding: '50px',\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                <div style={{ margin: 'auto', textAlign: 'center' }}>\r\n\r\n                    <Button  onClick={() => {navigate('/restaurants')}} type=\"primary\"  style={{ height: '20vh', minWidth: '60%', margin: 10, fontSize: '1.5em', borderRadius: 10, backgroundColor: 'rgb(19, 19, 211)' }}>\r\n                        Restaurants\r\n                    </Button>\r\n\r\n                    <Button onClick={() => {navigate('/past-orders')}} type=\"primary\" style={{ height: '20vh', minWidth: '60%', margin: 10, fontSize: '1.5em', borderRadius: 10, backgroundColor: 'rgb(19, 19, 211)' }}>\r\n                        Past Orders\r\n                    </Button>\r\n                    <Button onClick={() => {navigate('/my-account')}} type=\"primary\" style={{ height: '20vh', minWidth: '60%', margin: 10, fontSize: '1.5em', borderRadius: 10, backgroundColor: 'rgb(19, 19, 211)' }}>\r\n                        My Account\r\n                    </Button>\r\n                </div>\r\n\r\n\r\n            </Content>\r\n\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default Home;","/* eslint-disable */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Layout, Table } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './Login.css'\r\nimport { getPastOrders } from 'actions/pastOrders';\r\nimport GlobalHeader from 'components/GlobalHeader';\r\n\r\n\r\n\r\nconst PastOrders = (props) => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const [pastOrdersData, setPastOrdersData] = useState([]);\r\n\r\n    const authData = useSelector((state) => state.auth);\r\n    const pastOrders = useSelector((state) => state.pastOrders);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPastOrders(authData.token));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n\r\n        const data = [];\r\n\r\n        if (pastOrders.length > 0) {\r\n\r\n            let i = 1;\r\n            for (const order of pastOrders) {\r\n\r\n                const restData = {\r\n                    key: i,\r\n                    address: order.address.addressLine1,\r\n                    date: order.orderDate,\r\n                    name: order.restaurant.name,\r\n                    total: order.total\r\n                }\r\n\r\n                data.push(restData);\r\n                i++;\r\n            }\r\n        }\r\n\r\n        setPastOrdersData(data);\r\n    }, [pastOrders])\r\n\r\n\r\n\r\n    const { Header, Content, Footer } = Layout;\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            sorter: (a, b) => a.name.length - b.name.length,\r\n            sortDirections: ['descend'],\r\n        }, {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            sorter: (a, b) => a.name.length - b.name.length,\r\n            sortDirections: ['ascend', 'descend'],\r\n        },\r\n        {\r\n            title: 'Restaurant',\r\n            dataIndex: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length,\r\n            sortDirections: ['ascend', 'descend'],\r\n        },\r\n        {\r\n            title: 'Total Amount',\r\n            dataIndex: 'total',\r\n            sorter: (a, b) => a.total - b.total,\r\n            sortDirections: ['ascend', 'descend'],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Layout className=\"layout\" style={{ height: '100vh' }}>\r\n            <GlobalHeader />\r\n            <Content\r\n                style={{\r\n                    margin: '20px',\r\n                    marginBottom: 0,\r\n                    padding: '30px',\r\n                    paddingBottom: 0,\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                <div style={{ fontSize: '2em', fontWeight: 600, color: 'rgb(19, 19, 211)', marginLeft: 10 }}>\r\n                    Past Orders\r\n                </div>\r\n                <Table columns={columns} dataSource={pastOrdersData} loading={pastOrders.length > 0 ? false : true} />\r\n            </Content>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default PastOrders;","import { GET_PAST_ORDERS } from 'constants/actionTypes';\r\nimport * as api from '../api/index';\r\nimport * as mobileAPI from '../api/mobile';\r\n\r\nexport const getPastOrders = (userToken) => async (dispatch) => {\r\n  try {\r\n\r\n    const  pastOrdersData  = await mobileAPI.getPastOrders(userToken);\r\n\r\n \r\n\r\n    dispatch({ type: GET_PAST_ORDERS, payload: pastOrdersData.pastOrders });\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n","/* eslint-disable */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Layout, Table, Tag, Badge } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './Login.css'\r\nimport { getRestaurants } from 'actions/restaurants';\r\nimport GlobalHeader from 'components/GlobalHeader';\r\n\r\n\r\nconst PastOrders = (props) => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const [restaurantData, setRestaurantData] = useState([]);\r\n\r\n    const authData = useSelector((state) => state.auth);\r\n    const restaurants = useSelector((state) => state.restaurants);\r\n\r\n    useEffect(() => {\r\n        dispatch(getRestaurants(authData.token));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n\r\n        const data = [];\r\n\r\n        if (restaurants.length > 0) {\r\n            let i = 1;\r\n            for (const restaurant of restaurants) {\r\n\r\n                let typeNameArr = [];\r\n                for (const type of restaurant.types) {\r\n                    typeNameArr.push(type.name);\r\n                }\r\n\r\n                const restData = {\r\n                    key: i,\r\n                    name: restaurant.name,\r\n                    status: restaurant.open ? \"Open\" : \"Closed\",\r\n                    cuisines: typeNameArr\r\n                }\r\n\r\n                data.push(restData);\r\n                i++;\r\n            }\r\n        }\r\n        setRestaurantData(data);\r\n    }, [restaurants])\r\n\r\n\r\n    const { Header, Content, Footer } = Layout;\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length,\r\n            sortDirections: ['ascend', 'descend'],\r\n        },\r\n        {\r\n            title: 'Status',\r\n            key: 'state',\r\n            dataIndex: 'status',\r\n            filters: [\r\n                {\r\n                    text: 'Open',\r\n                    value: 'Open',\r\n                },\r\n                {\r\n                    text: 'Closed',\r\n                    value: 'Closed',\r\n                },\r\n\r\n            ],\r\n            render: (status) => (\r\n                <span>\r\n                    <Badge status={status === 'Open' ? 'success' : 'error'} />\r\n                    {status}\r\n                </span>\r\n            ),\r\n            onFilter: (value, record) => record.status == value,\r\n        },\r\n        {\r\n            title: 'Cuisines',\r\n            key: 'types',\r\n            dataIndex: 'cuisines',\r\n            render: (cuisines) => (\r\n                <span>\r\n                    {cuisines.map((tag) => {\r\n                        return (\r\n                            <Tag key={tag}>\r\n                                {tag.toUpperCase()}\r\n                            </Tag>\r\n                        );\r\n                    })}\r\n                </span>\r\n            ),\r\n        },\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Layout className=\"layout\" style={{ height: '100vh' }}>\r\n            <GlobalHeader />\r\n            <Content\r\n                style={{\r\n                    margin: '20px',\r\n                    marginBottom: 0,\r\n                    padding: '30px',\r\n                    paddingBottom: 0,\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                <div style={{ fontSize: '2em', fontWeight: 600, color: 'rgb(19, 19, 211)', marginLeft: 10 }}>\r\n                    All Restaurants\r\n                </div>\r\n                <Table columns={columns} dataSource={restaurantData} pagination={false} loading={restaurants.length > 0 ? false : true} />\r\n\r\n            </Content>\r\n\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default PastOrders;","import { GET_USER_RESTAURANTS } from 'constants/actionTypes';\r\nimport * as api from '../api/index';\r\nimport * as mobileAPI from '../api/mobile';\r\n\r\nexport const getRestaurants = (userToken) => async (dispatch) => {\r\n  try {\r\n\r\n    const  restaurantData  = await mobileAPI.getRestaurants(userToken);\r\n\r\n    dispatch({ type: GET_USER_RESTAURANTS, payload: restaurantData.restaurants });\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n","/* eslint-disable */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Layout, Table, Descriptions, Badge } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './Login.css'\r\nimport { getPastOrders } from 'actions/pastOrders';\r\nimport GlobalHeader from 'components/GlobalHeader';\r\nimport { getUserInfo } from 'actions/auth';\r\n\r\n\r\n\r\nconst Account = (props) => {\r\n\r\n    const { Content } = Layout;\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const authData = useSelector((state) => state.auth);\r\n    const userInfo = useSelector((state) => state.userInfo);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserInfo(authData.token));\r\n    }, [dispatch]);\r\n\r\n\r\n\r\n\r\n    if (userInfo === null) {\r\n        return <div> Loading </div>\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"layout\" style={{ height: '100vh' }}>\r\n            <GlobalHeader />\r\n            <Content\r\n                style={{\r\n                    margin: '20px',\r\n                    marginBottom: 0,\r\n                    padding: '30px',\r\n                    paddingBottom: 0,\r\n                    backgroundColor: 'white',\r\n                }}\r\n            >\r\n                <div style={{ fontSize: '2em', fontWeight: 600, color: 'rgb(19, 19, 211)', marginLeft: 10 }}>\r\n                    My Account\r\n                </div>\r\n                <Descriptions bordered>\r\n                    <Descriptions.Item label=\"Name\">{userInfo.firstName}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Last Name\">{userInfo.lastName}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Email\" span={2}>{userInfo.email}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Mobile Phone\" span={2} >\r\n                        {userInfo.mobileNumber}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Membership Date\" span={2}>\r\n                        {userInfo.createdAt}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"Email Verification\">{userInfo.emailVerified ? 'Verified' : 'Not Verified'}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"SMS Verification\">{userInfo.smsVerified ? 'Verified' : 'Not Verified'}</Descriptions.Item>\r\n                    {userInfo.addresses.map((address) => (\r\n\r\n                        <Descriptions.Item label=\"Address\" key={address.id}>\r\n                            {address.addressLine1}\r\n                            <br />\r\n                            {address.addressLine2}\r\n                            <br />\r\n                            {address.flatNumber}\r\n                            <br />\r\n                            {address.postalCode}\r\n                            <br />\r\n                       \r\n                        </Descriptions.Item>\r\n\r\n                    ))}\r\n\r\n                </Descriptions>\r\n            </Content>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default Account;","import { combineReducers } from 'redux';\r\n\r\n\r\nimport auth from './auth';\r\nimport restaurants from './restaurants';\r\nimport pastOrders from './pastOrders';\r\nimport userInfo from './user';\r\n\r\n\r\n\r\nexport const reducers = combineReducers({\r\n    auth,\r\n    restaurants,\r\n    pastOrders,\r\n    userInfo\r\n});\r\n\r\n","import { SIGN_IN,  SIGN_OUT} from '../constants/actionTypes';\r\n\r\n\r\nexport default  (authData =  JSON.parse(localStorage.getItem('usId')), action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return action.payload;\r\n        case SIGN_OUT:\r\n            return null;\r\n        default:\r\n            return authData;\r\n    }\r\n};","import { GET_USER_RESTAURANTS } from '../constants/actionTypes';\r\n\r\n\r\nexport default (restaurants = [], action) => {\r\n  switch (action.type) {\r\n    case GET_USER_RESTAURANTS:\r\n      return action.payload;\r\n    default:\r\n      return restaurants;\r\n  }\r\n};","import { GET_PAST_ORDERS} from '../constants/actionTypes';\r\n\r\n\r\nexport default (pastOrders = [], action) => {\r\n  switch (action.type) {\r\n    case GET_PAST_ORDERS:\r\n      return action.payload;\r\n    default:\r\n      return pastOrders;\r\n  }\r\n};","import { GET_USER_INFO } from '../constants/actionTypes';\r\n\r\n\r\nexport default (userInfo = null, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_INFO:\r\n      return action.payload;\r\n    default:\r\n      return userInfo;\r\n  }\r\n};","import { render } from \"react-dom\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport RequireAuth from 'components/Auth/RequireAuth'\nimport AlreadyLoginned from 'components/Auth/AlreadyLoginned'\nimport Login from \"./pages/Login\"\nimport Home from \"./pages/Home\"\nimport PastOrders from \"./pages/PastOrders\"\nimport Restaurants from \"./pages/Restaurants\"\nimport Account from \"./pages/Account\"\nimport { Provider, useSelector } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducers } from './reducers';\n\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\nconst rootElement = document.getElementById(\"root\");\n\n\n\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<RequireAuth>  <Home /> </RequireAuth>}>\n        </Route>\n        <Route path=\"/past-orders\" element={<RequireAuth>  <PastOrders /> </RequireAuth>}>\n        </Route>\n        <Route path=\"/restaurants\" element={<RequireAuth>  <Restaurants /> </RequireAuth>}>\n        </Route>\n        <Route path=\"/my-account\" element={<RequireAuth>  <Account /> </RequireAuth>}>\n        </Route>\n        <Route path=\"/login\" element={<AlreadyLoginned> <Login /> </AlreadyLoginned>  } />\n        <Route\n          path=\"*\"\n          element={\n            <div><h1>404</h1></div>\n          }\n        />\n      </Routes>\n    </BrowserRouter>\n  </Provider>,\n  rootElement\n);\n\n\n"],"sourceRoot":""}